(function(){
    var service = function() {
        var createData = function(data, tags) {
            var dataCount = data.length;

            var result = [];
            var tag_colors = ['#ff7f0e', '#2ca02c', '#7777ff'];

            for(var k=0; k < tags.length; ++k){
                var tag = tags[k];
                var tag_color = tag_colors[k % tag_colors.length];

                var points = [];
                for(var i=0; i < dataCount; ++i){
                    var record = data[i];
                    var x = record.timestamp;
                    var y = 0;
                    if(tag == 'sensorData'){
                        y = record.sensorData;
                    } else if(tag == 'lowerBound') {
                        y = record.lowerBound;
                    } else if(tag == 'upperBound') {
                        y = record.upperBound;
                    } else if(tag == 'prediction') {
                        y = record.prediction;
                    } else if(tag == 'sensorDeviation') {
                        y = record.sensorData - record.prediction;
                    }
                    points.push({x: x, y: y});
                }

                result.push({
                    key: tag, //key  - the name of the series.
                    color: tag_color,  //color - optional: choose your own line color.
                    values: points
                });
            }


            return result;

        };

        var options_sensorData = {
            chart: {
                type: 'lineChart',
                height: 450,
                margin : {
                    top: 20,
                    right: 20,
                    bottom: 40,
                    left: 55
                },
                x: function(d){ return d.x; },
                y: function(d){ return d.y; },
                useInteractiveGuideline: true,
                dispatch: {
                    stateChange: function(e){ console.log("stateChange"); },
                    changeState: function(e){ console.log("changeState"); },
                    tooltipShow: function(e){ console.log("tooltipShow"); },
                    tooltipHide: function(e){ console.log("tooltipHide"); }
                },
                xAxis: {
                    axisLabel: 'Time',
                    tickFormat: function(d) {
                        return d3.time.format('%b %d %H:%M')(new Date(d));
                    }
                },
                yAxis: {
                    axisLabel: '(v)',
                    tickFormat: function(d){
                        return d3.format('.02f')(d);
                    },
                    axisLabelDistance: -10
                },
                callback: function(chart){
                    console.log("!!! lineChart callback !!!");
                }
            },
            title: {
                enable: true,
                text: 'Line chart for Time Series Machine Learning'
            },
            subtitle: {
                enable: true,
                text: 'Time Series Machine Learning',
                css: {
                    'text-align': 'center',
                    'margin': '10px 13px 0px 7px'
                }
            },
            caption: {
                enable: true,
                html: '<b>Figure 1.</b> Time series showing the sensor data, the lower and upper bounds generated by predictive time series machine learning.',
                css: {
                    'text-align': 'justify',
                    'margin': '10px 13px 0px 7px'
                }
            }
        };

        return {
            options_sensorData : options_sensorData,
            createData: createData
        };
    };

    var app = angular.module('xschen-angular-ui-module');
    app.factory('xschenChartService', [service]);
})();
